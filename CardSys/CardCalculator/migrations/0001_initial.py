# Generated by Django 3.0.3 on 2021-01-15 00:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AirTimeProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MTN', 'AirTimeMTN'), ('GLO', 'AirTimeGLO'), ('AIRTEL', 'AirTimeAirtel')], default=None, help_text='The type of provider available, from one of the Providers.choices object.', max_length=50, verbose_name='Type')),
                ('name', models.CharField(help_text='The name of the Provider in plain text.', max_length=254, verbose_name='Name')),
                ('card_type', models.CharField(choices=[('_500', '_500_CARD'), ('_200', '_200_CARD'), ('_100', '_100_CARD')], default=None, help_text='The type of card -> 500, 200, or 100', max_length=254, verbose_name='Card_Type')),
                ('card_pack', models.CharField(choices=[('_10', '_10_Pack'), ('_20', '_20_Pack')], default=None, help_text='The type of pack these cards come in, either 10 or 20 cards in each pack', max_length=254, verbose_name='Card Pack')),
                ('card_pack_quantity', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Air Time Provider',
                'verbose_name_plural': 'Air Time Providers',
            },
        ),
        migrations.CreateModel(
            name='MTNProvider',
            fields=[
                ('airtimeprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='CardCalculator.AirTimeProvider')),
                ('total_balance', models.DecimalField(decimal_places=2, help_text='The total balance for all card packs purchased. ', max_digits=9)),
                ('price_per_pack', models.DecimalField(decimal_places=2, help_text='The price for every pack of airtime cards, eg ->  550 cards price * number of cards per pack ', max_digits=9)),
            ],
            bases=('CardCalculator.airtimeprovider',),
        ),
    ]
